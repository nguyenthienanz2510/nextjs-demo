import Head from "next/head";
import Image from "next/image";
import Link from "next/link";
import { useEffect } from "react";
import MainLayout from "../../components/Layout/MainLayout";
import SpinnerComponent from "../../components/Loading";
import { BASE_URL, postService } from "../../services/post";
import * as React from "react";
import Card from "@mui/material/Card";
import CardActions from "@mui/material/CardActions";
import CardContent from "@mui/material/CardContent";
import CardMedia from "@mui/material/CardMedia";
import Button from "@mui/material/Button";
import Typography from "@mui/material/Typography";
import DialogCreateBlog from "../../components/DialogCreateBlog";
import { useState } from "react";
import DialogEditBlog from "../../components/DialogEditBlog";
import { useRouter } from "next/router";

export default function Home() {
  const [posts, setPosts] = useState();

  const [spinner, setSpinner] = useState(false);

  const router = useRouter();

  useEffect(() => {
    setSpinner(true);
    postService
      .getPosts()
      .then((res) => {
        console.log(res);
        setPosts(res.data.posts);
        setSpinner(false);
      })
      .catch((error) => {
        console.log(error);
        setSpinner(false);
      });
  }, []);

  const handleDeleteBlog = (postId) => {
    setSpinner(true);
    fetch("http://localhost:8080/feed/post/" + postId, { method: "DELETE" })
      .then((res) => {
        if (res.status !== 200 && res.status !== 201) {
          throw new Error("Deleting a post failed!");
        }
        return res.json();
      })
      .then((resData) => {
        console.log(resData);
        postService
          .getPosts()
          .then((res) => {
            console.log(res);
            setPosts(res.data.posts);
            setSpinner(false);
          })
          .catch((error) => {
            console.log(error);
            setSpinner(false);
          });
        setSpinner(false);
      })
      .catch((err) => {
        console.log(err);
        setSpinner(false);
      });
  };

  return (
    <>
      <Head>
        <title>Mini NextJs</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {spinner && <SpinnerComponent />}
      <MainLayout>
        <div className="my-12 container mx-auto">
          <div className="my-5">
            <DialogCreateBlog />
          </div>
          <div className="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4">
            {!!posts &&
              posts.map((post) => {
                return (
                  <>
                    <Card
                      sx={{ maxWidth: 345 }}
                      key={post._id}
                      className="transition-all hover:bg-gray-200"
                    >
                      <CardMedia
                        component="img"
                        alt={post.title}
                        style={{ objectFit: "cover", height: "150px" }}
                        image={`${BASE_URL}/${post.imageUrl}`}
                      />
                      <CardContent>
                        <Typography
                          gutterBottom
                          variant="h5"
                          component="div"
                          className="truncate"
                        >
                          {post.title}
                        </Typography>
                        <Typography
                          variant="body2"
                          color="text.secondary"
                          className="text-truncation-2"
                        >
                          {post.content}
                        </Typography>
                      </CardContent>
                      <CardActions className="px-4 pb-4 pt-0">
                        <DialogEditBlog postId={post._id} />
                        <button className="text-color-red">
                          <Button
                            size="small"
                            onClick={() => {
                              handleDeleteBlog(post._id);
                            }}
                          >
                            Delete
                          </Button>
                        </button>
                      </CardActions>
                    </Card>
                  </>
                );
              })}
          </div>
        </div>
      </MainLayout>
    </>
  );
}
